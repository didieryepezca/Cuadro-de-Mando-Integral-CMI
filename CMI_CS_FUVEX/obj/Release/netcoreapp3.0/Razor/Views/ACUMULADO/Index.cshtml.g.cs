#pragma checksum "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "45b1aac4cb2c85afc900d88929dee50670c5241f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ACUMULADO_Index), @"mvc.1.0.view", @"/Views/ACUMULADO/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\_ViewImports.cshtml"
using CMI_CS_FUVEX;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\_ViewImports.cshtml"
using CMI_CS_FUVEX.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"45b1aac4cb2c85afc900d88929dee50670c5241f", @"/Views/ACUMULADO/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c389776d4191ca896db976ad1de6a72f362adddf", @"/Views/_ViewImports.cshtml")]
    public class Views_ACUMULADO_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<script type=\"text/javascript\">\r\n    \r\n    var vMes = \'");
#nullable restore
#line 8 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml"
           Write(ViewBag.MES);

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n    var vAno = \'");
#nullable restore
#line 9 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml"
           Write(ViewBag.YEAR);

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n    var vDiaAC = \'");
#nullable restore
#line 10 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml"
             Write(ViewBag.DAY);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';

    window.onload = load;

       function diaSemanaP(dia, mes, anio) {
        var dias = [""dom"", ""lun"", ""mar"", ""mie"", ""jue"", ""vie"", ""sab""];
        var dt = new Date(mes + ' ' + dia + ', ' + anio + ' 12:00:00');
        //console.log(dias[dt.getUTCDay()]);
        return dias[dt.getUTCDay()]
    };

     function load() {

         funAcumulados('PRESTAMO DE LIBRE DISPONIBILIDAD');

        //console.log(vDiaAC);
        //console.log(vMes);
        //console.log(vAno);

    };


    function funAcumulados(nombre) {

        $('#tbAcumNro').remove();
        $('#tbAcumConteos').remove();
        $('#tbAcumTotal').remove();


        var url = ""/ACUMULADO/FunLoadResumenAcumulado"";
        $.get(url, { nombre: nombre, tipo: '");
#nullable restore
#line 40 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml"
                                       Write(ViewBag.tipo);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' }, function (data) {


            var headAcumulado = """";
            var bodyAcumulado = """";
            var totalAcumulado = """";

            var producto = """";

            var dato5 = 0;
            var dato51 = 0;
            var dato52 = 0;
            var dato53 = 0;
            var dato8 = 0;
            

            var datoArray = [];


            //Objeto que contendra una fila, object_name = descripcion estado, object value = valor del identificador, object_inde_item = numerador 1, 1.1, 1.2 etc
            function DatoObject(object_name, object_value, object_index_item) {
                this.object_name = object_name;
                this.object_value = object_value;                
                this.object_index_item = object_index_item;
            };


            //console.log(lengthTabla);
            var cont = 1;
            var nro;

            headAcumulado = '<thead >';
            headAcumulado = headAcumulado + '<tr style=""height:30px;"">';
  ");
            WriteLiteral(@"          headAcumulado = headAcumulado + '<th>.</th>';
            headAcumulado = headAcumulado + '<th>.</th>';
            headAcumulado = headAcumulado + '</tr></thead>';
            
            headAcumulado = headAcumulado + '<thead>';
            headAcumulado = headAcumulado + '<tr>';
            headAcumulado = headAcumulado + '<th>Nro</th>';
            headAcumulado = headAcumulado + '<th>Descripci√≥n de Estado</th>';
            headAcumulado = headAcumulado + '</tr></thead>';


            data.forEach(function (element) {

                //console.log(data);
                headAcumulado = headAcumulado + '<tr style=""height:46px;"">';
                headAcumulado = headAcumulado + '<td> <small style=""color: blue"">' + element.nro + '</small></td>';
                headAcumulado = headAcumulado + '<td> <small style=""color: green"">' + element.descripcion_estado + '</small> </td>';
                headAcumulado = headAcumulado + '</tr>';      

                cont = cont + 1;
 ");
            WriteLiteral(@"               producto = element.producto;


                  ////-- Para definir los ids de las cajitas de texto, las descripciones de estado y los numeros de indices de los estados
                if (element.nro == ""5"") { dato5 = 1; }
                if (element.nro == ""5.1"") { dato51 = 1; }
                if (element.nro == ""5.2"") { dato52 = 1; }
                if (element.nro == ""5.3"") { dato53 = 1; }
                if (element.nro == ""8"") { dato8 = 1; }
                

            });

             if (dato5 == 0) {
                //----------------------------------------------- ETIQUETAS PARA DATOS DE ANS QUE INGRESARAN MANUALMENTE
                headAcumulado = headAcumulado + '<tr style=""height:48px;"">';
                headAcumulado = headAcumulado + '<td> <small style=""color: blue"">5. </small></td>';
                headAcumulado = headAcumulado + '<td> <small style=""color: green""> Efectividad </small> </td>';
                headAcumulado = headAcumulado + '</tr>';
   ");
            WriteLiteral(@"             
            } else {
                //console.log(dato4);
            }
            if (dato51 == 0) {
                headAcumulado = headAcumulado + '<tr style=""height:48x;"">';
                headAcumulado = headAcumulado + '<td> <small style=""color: blue"">5.1 </small></td>';
                headAcumulado = headAcumulado + '<td> <small style=""color: green""> Total de Operaciones </small> </td>';
                headAcumulado = headAcumulado + '</tr>';
            }
            else {
                //console.log(dato41);
            }
            if (dato52 == 0) {
                headAcumulado = headAcumulado + '<tr style=""height:48px;"">';
                headAcumulado = headAcumulado + '<td> <small style=""color: blue"">5.2 </small></td>';
                headAcumulado = headAcumulado + '<td> <small style=""color: green""> Dentro de ANS (Efectividad)</small> </td>';
                headAcumulado = headAcumulado + '</tr>';
            } else {
                //console.log(da");
            WriteLiteral(@"to42);
            }
            if (dato53 == 0) {
                headAcumulado = headAcumulado + '<tr style=""height:48px;"">';
                headAcumulado = headAcumulado + '<td> <small style=""color: blue"">5.3 </small></td>';
                headAcumulado = headAcumulado + '<td> <small style=""color: green""> Fuera de ANS (Efectividad)</small> </td>';
                headAcumulado = headAcumulado + '</tr>';
            } else {
                 //console.log(dato43);
            }
            if (dato8 == 0) {
                headAcumulado = headAcumulado + '<tr style=""height:48px;"">';
                headAcumulado = headAcumulado + '<td> <small style=""color: blue"">8 </small></td>';
                headAcumulado = headAcumulado + '<td> <small style=""color: green""> Efectividad Acumulada</small> </td>';
                headAcumulado = headAcumulado + '</tr>';
            } else {
                 //console.log(dato43);
            }


            $('#pnlAcumuladoNro').append('<table class=");
            WriteLiteral(@"""table table-hover m-b-0"" style=""font-size:11.0px;"" id=""tbAcumNro"" >' + headAcumulado + '</table>').fadeIn(300000);

            ///-------------------------------------------------------------------- CABEZERA CUERPO DIAS DEL MES
            bodyAcumulado = '<thead>';
            bodyAcumulado = bodyAcumulado + '<tr>'; 


            for (i = 0; i < 31; i++) {

                var dia = i + 1;

                //console.log(dia);
                //console.log(vDiaAC);

                var Sem_dia = diaSemanaP(dia, vMes, vAno);


                if ((Sem_dia != ""dom"") && vDiaAC >= dia)
                {
                    bodyAcumulado = bodyAcumulado + '<th>' + Sem_dia + '</th>';
                }
            }
            bodyAcumulado = bodyAcumulado + '</tr>';
            bodyAcumulado = bodyAcumulado + '</thead>';

            bodyAcumulado = bodyAcumulado + '<thead>';
            bodyAcumulado = bodyAcumulado + '<tr>';

            for (i = 0; i < 31; i++) {

              ");
            WriteLiteral(@"  var dia = i + 1;
                var Sem_dia = diaSemanaP(dia, vMes, vAno);
                //if ((Sem_dia != ""dom"" && Sem_dia != ""sab"") && vDiaAC >= dia)
                if ((Sem_dia != ""dom"") && vDiaAC >= dia)
                {

                    bodyAcumulado = bodyAcumulado + '<th>' + dia + '</th>';
                }
            }
            bodyAcumulado = bodyAcumulado + '</tr>';
            bodyAcumulado = bodyAcumulado + '</thead>';


            //--------------------------------------------- CUERPO INFORMACION

            bodyAcumulado = bodyAcumulado + '<tbody>';

            cont = 1;
            //console.log(data);
            data.forEach(function (element2) {

                bodyAcumulado = bodyAcumulado + '<tr class=""x' + cont + '"" id=""fila' + cont + '"">';


                 //--------------------- columna de las cajas de los IDs de cada registro
                    bodyAcumulado = bodyAcumulado + '<td hidden>';
                    bodyAcumulado = bodyAcumulad");
            WriteLiteral(@"o + '<input type=""text"" id=""' + cont + 'th"" value=""' + element2.codigo + '"" style=""width: 40px"" readonly>';
                    bodyAcumulado = bodyAcumulado + '</td>';
                //--------------------- columna de las cajas de los IDs de cada registro

                for (i = 0; i < 31; i++) {

                    var dia = i + 1;
                    var Sem_dia = diaSemanaP(dia, vMes, vAno);
                    
                    if ((Sem_dia != ""dom"") && vDiaAC >= dia)
                    {
                        var campo = ""element2.dia"" + dia;

                        bodyAcumulado = bodyAcumulado + '<td>'

                         if (eval(campo) >= 0 && element2.nro != ""5"" && element2.nro != ""5.1"" && element2.nro != ""5.2"" && element2.nro != ""5.3"") {

                            bodyAcumulado = bodyAcumulado + '<small style=""color: blue"">' + eval(campo).toLocaleString('en') + '</small>';

                        } else if (element2.nro == ""5"") {

                          ");
            WriteLiteral(@"  nro = 5;

                            bodyAcumulado = bodyAcumulado + '<input type=""text"" id=""' + nro + 'dia' + dia + '"" value=""' + eval(campo).toLocaleString('en') + '"" onchange=""addTotales(' + dia + ')"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"" readonly>';

                        } else if (element2.nro == ""5.1"" || element2.nro == ""5.2"" || element2.nro == ""5.3"" || element2.nro == ""8"")
                        {
                            if (element2.nro == ""5.1"") { nro = 51; }
                            else if (element2.nro == ""5.2"") { nro = 52; }
                             else if (element2.nro == ""5.3"") { nro = 53; }   
                             else if (element2.nro == ""8"") { nro = 8; };

                             bodyAcumulado = bodyAcumulado + '<input type=""text"" id=""' + nro + 'dia' + dia + '"" value=""' + eval(campo).toLocaleString('en') + '"" onfocus=""addTotales(' + dia + ');"" onchange=""addTotales(' + dia + ')"" onkeypress=""javascript:return isNumber(even");
            WriteLiteral(@"t)"" style=""width: 40px"">';

                         }
                        // else if (element2.nro == ""8"")
                        //{
                        //    nro = 8;              

                        //    bodyAcumulado = bodyAcumulado + '<input type=""text"" id=""' + nro + 'dia' + dia + '"" value=""' + eval(campo).toLocaleString('en') + '"" onfocus=""addTotales(' + dia + ');"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"">';
                        //}


                        bodyAcumulado = bodyAcumulado + '</td>';
                    }
                }

                bodyAcumulado = bodyAcumulado + '</tr>';
                cont = cont + 1;
            });

             //----------------------------------------------- ARRAY PARA TABLA DE  CAMPOS QUE SE LLENARAN MANUALMENTE            
            //-------------------------------------------------------------------------- ----------------------------------

            if (dato5 == 0) { datoArray.pu");
            WriteLiteral(@"sh(new DatoObject(""Efectividad"", 5, ""5"")) } else { /*console.log(""ya existe"");*/ }
            if (dato51 == 0) { datoArray.push(new DatoObject(""Total de Operaciones"", 51, ""5.1"")) } else { /*console.log(""ya existe"");*/ }
            if (dato52 == 0) { datoArray.push(new DatoObject(""Dentro de ANS (Efectividad)"", 52, ""5.2"")) } else { /*console.log(""ya existe"");*/ }
            if (dato53 == 0) { datoArray.push(new DatoObject(""Fuera de ANS (Efectividad)"", 53, ""5.3"")) } else { /*console.log(""ya existe"");*/ }
            if (dato8 == 0) { datoArray.push(new DatoObject(""Efectividad Acumulada"", 8, ""8"")) } else { /*console.log(""ya existe"");*/ }
            

            //var datoFound = datoArray.find(o => o.object_name == ""Mesa de Control"");
            //console.log(datoArray);

            datoArray.forEach(

                function (item, index)
                {
                    //console.log(""En el √≠ndice "" + index + "" hay este valor: "" + item.object_value + "" y este nombre: "" + item.object_n");
            WriteLiteral(@"ame);


                    bodyAcumulado = bodyAcumulado + '<tr class=""x' + index + '"" id=""fila' + index + '"">';              

                    for (j = 0; j < 31; j++) {

                        var dia = j + 1;
                        var Sem_dia = diaSemanaP(dia, vMes, vAno);

                        if ((Sem_dia != ""dom"") && vDiaAC >= dia) {                            

                            if (item.object_name == ""Efectividad"") {

                                bodyAcumulado = bodyAcumulado + '<td>';
                                bodyAcumulado = bodyAcumulado + '<input type=""text"" value=""0"" id=""' + item.object_value + 'dia' + dia + '"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"" readonly>';
                                bodyAcumulado = bodyAcumulado + '</td>';

                            } else {
                                bodyAcumulado = bodyAcumulado + '<td>';
                                bodyAcumulado = bodyAcumulado + '<input type=""t");
            WriteLiteral(@"ext"" value=""0"" id=""' + item.object_value + 'dia' + dia + '"" onfocus=""addTotales(' + dia + ');"" onchange=""addTotales(' + dia + ')"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"">';
                                bodyAcumulado = bodyAcumulado + '</td>';
                            }
                        }
                    }
                    bodyAcumulado = bodyAcumulado + '</tr>';
            });            
            
            //-------------------------------------------------------------------------- ----------------------------------

            bodyAcumulado = bodyAcumulado + '</tbody>';

            $('#pnlAcumuladoConteos').append('<table class=""table table-hover m-b-0"" style=""font-size:12.5px;"" id=""tbAcumConteos"" >' + bodyAcumulado + '</table>').fadeIn(300000);//.innerHTML();


           //--------------------------------------------------------------------------------------- TABLA TOTALES

            //--------------------------------------------- ");
            WriteLiteral(@"Nombres DEL MES de Tablita Totales

            totalAcumulado = '<thead>';
            totalAcumulado = totalAcumulado + '<tr>';

            var theMonths = [""Ene"", ""Feb"", ""Mar"", ""Abr"", ""May"",
                ""Jun"", ""Jul"", ""Agos"", ""Set"", ""Oct"", ""Nov"", ""Dic""];

            var totalMes = theMonths.length;
            var MesReal = vMes - 1; // porque Javascript cuenta los meses desde 0, Enero es 0, Febrero es 1, etc...

            var todayDay = new Date(vAno, MesReal, vDiaAC);
            todayDay.setMonth(todayDay.getMonth() - 2);
            var mesBack = todayDay.getMonth();

            for (i = 0; i < 3; i++) {

                var mesNombre = theMonths[mesBack];

                if (mesBack == totalMes) {

                    mesBack = 0;
                    totalAcumulado = totalAcumulado + '<th>' + 'Ene' + '</th>';
                    mesBack++;

                } else {
                    totalAcumulado = totalAcumulado + '<th>' + mesNombre + '</th>';
                  ");
            WriteLiteral(@"  mesBack++;
                }
            };

            totalAcumulado = totalAcumulado + '</tr>';
            totalAcumulado = totalAcumulado + '</thead>';

            //--------------------------------------------- NUMEROS DEL MES


            totalAcumulado = totalAcumulado + '<thead>';
            totalAcumulado = totalAcumulado + '<tr>';

            var todayDay2 = new Date(vAno, MesReal, vDiaAC);

            todayDay2.setMonth(todayDay2.getMonth() - 2);

            var mesBack2 = todayDay2.getMonth() + 1;

            for (i = 0; i < 3; i++) {

                if (mesBack2 == totalMes) {

                    mesBack2 = 0;
                    totalAcumulado = totalAcumulado + '<th>' + '12' + '</th>';
                    mesBack2++;

                } else {
                    totalAcumulado = totalAcumulado + '<th>' + mesBack2 + '</th>';
                    mesBack2++;
                }
            }

            totalAcumulado = totalAcumulado + '</tr>';
      ");
            WriteLiteral(@"      totalAcumulado = totalAcumulado + '</thead>';

            //--------------------------------------------------------- CUERPO TOTALES

            totalAcumulado = totalAcumulado + '<tbody>';            

            data.forEach(function (element2) {              

                totalAcumulado = totalAcumulado + '<tr>';

                var mesA = Number(vMes) - 3;

                for (i = 0; i < 3; i++) {

                    var dia = i + 1;

                    if (vDiaAC >= dia) {

                        mesA++;
                        var campo = ""element2.mes"" + dia;

                        totalAcumulado = totalAcumulado + '<td>'

                        if (eval(campo) >= 0 && element2.nro != ""5"" && element2.nro != ""5.1"" && element2.nro != ""5.2"" && element2.nro != ""5.3"") {

                            totalAcumulado = totalAcumulado + '<small style=""color: blue"">' + eval(campo).toLocaleString('en') + '</small>';
                        }
                         ");
            WriteLiteral(@"else if (element2.nro == ""5"") {

                            nro = 5;

                            totalAcumulado = totalAcumulado + '<input type=""text"" id=""' + nro + 'mes' + dia + '"" value=""' + eval(campo) + '"" onfocus=""addTotales(' + dia + ');"" onchange=""addTotales(' + dia + ')"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"" readonly>';

                        } else if (element2.nro == ""5.1"" || element2.nro == ""5.2"" || element2.nro == ""5.3"" || element2.nro == ""8"")
                        {
                            if (element2.nro == ""5.1"") { nro = 51; }
                            else if (element2.nro == ""5.2"") { nro = 52; }
                            else if (element2.nro == ""5.3"") { nro = 53; }
                            else if (element2.nro == ""8"") { nro = 8; };

                            totalAcumulado = totalAcumulado + '<input type=""text"" id=""' + nro + 'mes' + dia + '"" value=""' + eval(campo) + '"" onfocus=""addTotales(' + dia + ');"" onchange=""addTotales(' + d");
            WriteLiteral(@"ia + ')"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"">';
                        }
                     

                        totalAcumulado = totalAcumulado + '</td>';       
                    }
                }                       

                     //----- fin del for 31
                ////-----------------------------------------------------------------REVISAR LOS BOTONES 
                      //console.log(""otro"")
                    if (element2.descripcion_estado == ""Efectividad"") {
                        totalAcumulado = totalAcumulado + '<td>';
                        totalAcumulado = totalAcumulado + '<i class=""zmdi zmdi-save"" id=""' + nro + '"" onclick=""SaveANS(' + nro + ',`' + producto + '`,`' + element2.descripcion_estado + '`, ' + element2.nro + ',' + element2.codigo + ',`U`)"" style=""cursor:pointer""></i>';
                        totalAcumulado = totalAcumulado + '</td>';
                    }
                    else if (element2.descripcion_e");
            WriteLiteral(@"stado == ""Total de Operaciones"") {
                        totalAcumulado = totalAcumulado + '<td>';
                        totalAcumulado = totalAcumulado + '<i class=""zmdi zmdi-save"" id=""' + nro + '"" onclick=""SaveANS(' + nro + ',`' + producto + '`,`' + element2.descripcion_estado + '`, ' + element2.nro + ',' + element2.codigo + ',`U`)"" style=""cursor:pointer""></i>';
                        totalAcumulado = totalAcumulado + '</td>';
                    }
                    else if (element2.descripcion_estado == ""Dentro de ANS (Efectividad)"") {
                        totalAcumulado = totalAcumulado + '<td>';
                        totalAcumulado = totalAcumulado + '<i class=""zmdi zmdi-save"" id=""' + nro + '"" onclick=""SaveANS(' + nro + ',`' + producto + '`,`' + element2.descripcion_estado + '`, ' + element2.nro + ',' + element2.codigo + ',`U`)"" style=""cursor:pointer""></i>';
                        totalAcumulado = totalAcumulado + '</td>';
                    }
                    else if (element");
            WriteLiteral(@"2.descripcion_estado == ""Fuera de ANS (Efectividad)"") {
                        totalAcumulado = totalAcumulado + '<td>';
                        totalAcumulado = totalAcumulado + '<i class=""zmdi zmdi-save"" id=""' + nro + '"" onclick=""SaveANS(' + nro + ',`' + producto + '`,`' + element2.descripcion_estado + '`, ' + element2.nro + ',' + element2.codigo + ', `U` )"" style=""cursor:pointer""></i>';
                        totalAcumulado = totalAcumulado + '</td>';
                    }
                    else if (element2.descripcion_estado == ""Efectividad Acumulada"") {
                        totalAcumulado = totalAcumulado + '<td>';
                        totalAcumulado = totalAcumulado + '<i class=""zmdi zmdi-save"" id=""' + nro + '"" onclick=""SaveANS(' + nro + ',`' + producto + '`,`' + element2.descripcion_estado + '`, ' + element2.nro + ',' + element2.codigo + ', `U` )"" style=""cursor:pointer""></i>';
                        totalAcumulado = totalAcumulado + '</td>';
                    }      


       ");
            WriteLiteral(@"         totalAcumulado = totalAcumulado + '</tr>';           
                 cont = cont + 1;
            });


              datoArray.forEach(

                function (item, index) {

                    //console.log(""En el √≠ndice "" + index + "" hay este valor: "" + item.object_value + "" y este nombre: "" + item.object_name);

                    totalAcumulado = totalAcumulado + '<tr class=""x2"" id=""fila' + index + '"">';

                    //--------------------- columna de las cajas de los IDs de cada registro

                    //cabeceratotal = cabeceratotal + '<td>';
                    //cabeceratotal = cabeceratotal + '<input type=""text"" id=""'+nro+'mes""  value=""0"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"" readonly>';
                    //cabeceratotal = cabeceratotal + '</td>';

                    //--------------------- columna de las cajas de los IDs de cada registro

                    //--------------------- MESES 1 2 Y 3 3
                 ");
            WriteLiteral(@"   for (i = 0; i < 3; i++) {

                        var dia = i + 1;

                        if (vDiaAC >= dia) {

                            if (item.object_name == ""Efectividad"") {

                                totalAcumulado = totalAcumulado + '<td>';
                                totalAcumulado = totalAcumulado + '<input type=""text"" id=""' + item.object_value + 'mes' + dia + '""  value=""0"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"" readonly>';
                                totalAcumulado = totalAcumulado + '</td>';
                            } else {
                                totalAcumulado = totalAcumulado + '<td>';
                                totalAcumulado = totalAcumulado + '<input type=""text"" id=""' + item.object_value + 'mes' + dia + '"" value=""0"" onfocus=""addTotales(' + dia + ');""  onchange=""addTotales(' + dia + ')"" onkeypress=""javascript:return isNumber(event)"" style=""width: 40px"">';
                                totalAcumulado = totalAcumu");
            WriteLiteral(@"lado + '</td>';
                            }
                        }
                    }
                    //--------------------- MESES 1 2 Y 3 3 

                    //Botones para guardar la info
                    //if (h > 1) {
                    totalAcumulado = totalAcumulado + '<td>';
                    totalAcumulado = totalAcumulado + '<i class=""zmdi zmdi-save"" id=""' + item.object_value + '"" onclick=""SaveANS(' + item.object_value + ',`' + producto + '`,`' + item.object_name + '`, ' + item.object_index_item + ')"" style=""cursor:pointer""></i>';
                    totalAcumulado = totalAcumulado + '</td>';
                    //}
                    totalAcumulado = totalAcumulado + '</tr>';

                });
            
            totalAcumulado = totalAcumulado + '</tbody>';
            
            $('#pnlAcumuladoTotal').append('<table class=""table table-hover m-b-0"" style=""font-size:12.5px;"" id=""tbAcumTotal"" >' + totalAcumulado + '</table>').fadeIn(300000);

   ");
            WriteLiteral(@"     });
    }

    function SaveANS(nro, producto, estado, item,id, accion) {

        //--------------------Para actualizar

        var vId = id;
        var vAccion = accion;

        
        if (typeof (vId) === 'undefined') {

            vId = null;
            //console.log(vId);

        } if (typeof (vAccion) === 'undefined') {
            vAccion = null;
            //console.log(vAccion);
        } else {
            console.log(vId);
             //console.log(vAccion);
        }
        //--------------------Para actualizar

        //----------------------------para grabar
        var product_name = producto;
        var desc_estado = estado;
        var item_nro = item;       

        //para sacar los valores de las cajitas
        var nro_item = nro;

        var dia1 = 0; dia2 = 0; dia3 = 0; dia4 = 0; dia5 = 0;dia6 = 0;dia7 = 0;dia8 = 0;dia9 = 0;dia10 = 0;
        dia11 = 0; dia12 = 0; dia13 = 0; dia14 = 0; dia15 = 0; dia16 = 0; dia17 = 0; dia18 = 0; dia19");
            WriteLiteral(@" = 0; dia20 = 0;
        dia21 = 0; dia22 = 0; dia23 = 0; dia24 = 0; dia25 = 0; dia26 = 0; dia27 = 0; dia28 = 0; dia29 = 0; dia30 = 0; dia31 = 0;
        mes1 = 0; mes2 = 0; mes3 = 0;

        function ObjetoANS(item, descripcion_estado, producto, nombre_dia, valor) {
            this.item = item;
            this.descripcion_estado = descripcion_estado;
            this.producto = producto;
            this.nombre_dia = nombre_dia;
            this.valor = valor;
        };

        ValorDiaDelMesArray = [];

        for (i = 0; i < 31; i++) {

            var dia = i + 1;
            //var Sem_dia = diaSemanaP(dia, vMes, vAno);

            var diaFor = 'dia' + dia;
            var ValorDia = 0;

            var diaInputBox = 'dia' + dia;
            ValorDia = $('#' + nro_item + diaInputBox).val();

            ValorDiaDelMesArray.push(new ObjetoANS(item_nro, desc_estado ,product_name, diaFor, ValorDia));

            //if ((Sem_dia != ""dom"") && vDiaAC >= dia) {
            //  ");
            WriteLiteral(@"  var diax = 'dia' + dia;
            //    var diaEncontrado = DiasMesArray.find(o => o.nombre === diax);
            //}
        }

        for (k = 1; k <= 3; k++) {

            var mesInputBox = 'mes' + k;
            var ValorMes = 0;
            ValorMes = $('#' + nro_item + mesInputBox).val();

            ValorDiaDelMesArray.push(new ObjetoANS(item_nro, desc_estado, product_name, mesInputBox, ValorMes));
        }
        

        dia1 = Number(ValorDiaDelMesArray[0].valor);
        dia2 = Number(ValorDiaDelMesArray[1].valor);
        dia3 = Number(ValorDiaDelMesArray[2].valor);
        dia4 = Number(ValorDiaDelMesArray[3].valor);
        dia5 = Number(ValorDiaDelMesArray[4].valor);
        dia6 = Number(ValorDiaDelMesArray[5].valor);
        dia7 = Number(ValorDiaDelMesArray[6].valor);
        dia8 = Number(ValorDiaDelMesArray[7].valor);
        dia9 = Number(ValorDiaDelMesArray[8].valor);
        dia10 = Number(ValorDiaDelMesArray[9].valor);
        dia11 = Number(ValorDia");
            WriteLiteral(@"DelMesArray[10].valor);
        dia12 = Number(ValorDiaDelMesArray[11].valor);
        dia13 = Number(ValorDiaDelMesArray[12].valor);
        dia14 = Number(ValorDiaDelMesArray[13].valor);
        dia15 = Number(ValorDiaDelMesArray[14].valor);
        dia16 = Number(ValorDiaDelMesArray[15].valor);
        dia17 = Number(ValorDiaDelMesArray[16].valor);
        dia18 = Number(ValorDiaDelMesArray[17].valor);
        dia19 = Number(ValorDiaDelMesArray[18].valor);
        dia20 = Number(ValorDiaDelMesArray[19].valor);
        dia21 = Number(ValorDiaDelMesArray[20].valor);
        dia22 = Number(ValorDiaDelMesArray[21].valor);
        dia23 = Number(ValorDiaDelMesArray[22].valor);
        dia24 = Number(ValorDiaDelMesArray[23].valor);
        dia25 = Number(ValorDiaDelMesArray[24].valor);
        dia26 = Number(ValorDiaDelMesArray[25].valor);
        dia27 = Number(ValorDiaDelMesArray[26].valor);
        dia28 = Number(ValorDiaDelMesArray[27].valor);
        dia29 = Number(ValorDiaDelMesArray[28].");
            WriteLiteral(@"valor);
        dia30 = Number(ValorDiaDelMesArray[29].valor);
        dia31 = Number(ValorDiaDelMesArray[30].valor);
        mes1 = Number(ValorDiaDelMesArray[31].valor);
        mes2 = Number(ValorDiaDelMesArray[32].valor);
        mes3 = Number(ValorDiaDelMesArray[33].valor); 
   
        //console.log(ValorDiaDelMesArray);

        //--------------------------------------------STAR AJAX GRABAR

         $.ajax({
             type: ""POST"",
             url: ""/ACUMULADO/FunGrabarAcumulados?producto="" + product_name + ""&numero_item="" + item_nro + ""&descripcion_estado="" + desc_estado + ""&dia1="" + dia1 + ""&dia2="" + dia2 + ""&dia3="" + dia3 + ""&dia4="" + dia4 + ""&dia5="" + dia5 + ""&dia6="" + dia6 + ""&dia7="" + dia7 + ""&dia8="" + dia8 + ""&dia9="" + dia9 + ""&dia10="" + dia10 + ""&dia11="" + dia11 + ""&dia12="" + dia12 + ""&dia13="" + dia13 + ""&dia14="" + dia14 + ""&dia15="" + dia15 + ""&dia16="" + dia16 + ""&dia17="" + dia17 + ""&dia18="" + dia18 + ""&dia19="" + dia19 + ""&dia20="" + dia20 + ""&dia21="" + dia21 + ""&dia22="" + dia2");
            WriteLiteral(@"2 + ""&dia23="" + dia23 + ""&dia24="" + dia24 + ""&dia25="" + dia25 + ""&dia26="" + dia26 + ""&dia27="" + dia27 + ""&dia28="" + dia28 + ""&dia29="" + dia29 + ""&dia30="" + dia30 + ""&dia31="" + dia31 + ""&mes1="" + mes1 + ""&mes2="" + mes2 + ""&mes3="" + mes3 + ""&vCodigo="" + vId + ""&vAccion="" + vAccion,
            contentType: false,
            processData: false,
            //data: data,
            success: function (jres) {

                console.log(jres);

                if (jres == ""INSERTO"") {


                    //-----------------------------------------------------------------StartSwal
                    Swal.fire({
                        position: 'top-center',
                        icon: 'success',
                        html: 'Se ingresar√° el registro: <strong> ' + desc_estado + ' </strong> en <b></b> milisegundos.',
                        timer: 4000,
                        timerProgressBar: true,
                        onBeforeOpen: () => {
                            Swal.showLoadin");
            WriteLiteral(@"g()
                            timerInterval = setInterval(() => {
                                const content = Swal.getContent()
                                if (content) {
                                    const b = content.querySelector('b')
                                    if (b) {
                                        b.textContent = Swal.getTimerLeft()
                                    }
                                }
                            }, 100)
                        },
                        onClose: () => {
                            clearInterval(timerInterval);
                            funAcumulados(product_name); //recarga la tabla
                        }
                    }).then((result) => {
                        /* Read more about handling dismissals below */
                        if (result.dismiss === Swal.DismissReason.timer) {

                            
                            //console.log('Se captur√≥ la funcion');
     ");
            WriteLiteral(@"                   }
                    })
                    //-----------------------------------------------------------------EndSwal
                    
                }
                else
                {
                    //-----------------------------------------------------------------StartSwal
                     Swal.fire({
                        position: 'top-center',
                        icon: 'success',                        
                        html: 'Se actualizar√° el registro: <strong> ' + desc_estado + ' </strong> en <b></b> milisegundos.',
                        timer: 4000,
                        timerProgressBar: true,
                        onBeforeOpen: () => {
                            Swal.showLoading()
                            timerInterval = setInterval(() => {
                                const content = Swal.getContent()
                                if (content) {
                                    const b = content.querySelect");
            WriteLiteral(@"or('b')
                                    if (b) {
                                        b.textContent = Swal.getTimerLeft()
                                    }
                                }
                            }, 100)
                        },
                        onClose: () => {
                            clearInterval(timerInterval);
                            
                        }
                    }).then((result) => {
                        /* Read more about handling dismissals below */
                        if (result.dismiss === Swal.DismissReason.timer) {

                            funAcumulados(product_name); //recarga la tabla
                            //console.log('Se captur√≥ la funcion');
                        }
                    })
                    //-----------------------------------------------------------------EndSwal

                }
            },
        });

        //--------------------------------------------EN");
            WriteLiteral(@"D AJAX GRABAR
    }

    

    function addTotales(id) {

        var suma = 0;
        var sumam = 0;
        var efectividad = 0;
        var efectividadmes = 0;
       
        var a = Number($('#52dia' + id).val());
        var c = Number($('#53dia' + id).val());
        
        var am = Number($('#52mes' + id).val());
        var cm = Number($('#53mes' + id).val());        

        suma = a + c;
        sumam = am + cm;

        $('#51dia' + id).val(suma);
        $('#51mes' + id).val(sumam);      

        //------------------------------------------- Efectividad dias

        var totop = $('#51dia' + id).val();        

        efectividad = ((Number(totop) - c)/Number(totop)) * 100;        

        var efDia = (isNaN(efectividad) ? 0 : efectividad);  // Cuando el resultado de la variable efectividad da NaN, esto lo reemplaza por 0

        //console.log(efDia);
        $('#5dia' + id).val(efDia);
         
        //------------------------------------------- Efec");
            WriteLiteral(@"tividad meses

        var totopmes = $('#51mes' + id).val();      

        efectividadmes = ((Number(totopmes) - cm) / Number(totopmes)) * 100;

        var efMes = (isNaN(efectividadmes) ? 0 : efectividadmes);      // Cuando el resultado de la variable efectividad da NaN, esto lo reemplaza por 0

        //console.log(efMes);
        $('#5mes' + id).val(efMes);        

        //------------------------------------------- Efectividad acumulada para el item 8

        var totalOpEachSingleValue = 0;
        var TotalOp = 0;        

        var FueraANSEachSingleValue = 0;
        var TotalFueraANS = 0;

        var EfectividadAcumulada = 0;
        var EAFinal = 0;   

        //--------------- meses 1 2 y 3

        var totalMesOp = 0;
        var totalMesFueraANS = 0;

        var EfectividadAcumuladaMensual = 0;
        var EAMesFinal = 0;

        for (i = 0; i < id; i++) {

            var id_dia = i + 1;
            var Sem_dia = diaSemanaP(id_dia, vMes, vAno);

  ");
            WriteLiteral(@"          if ((Sem_dia != ""dom"") && vDiaAC >= id_dia) {

                totalOpEachSingleValue = $('#51dia' + id_dia).val();
                TotalOp = Number(TotalOp) + Number(totalOpEachSingleValue); // Suma horizontal de los items del item Efectividad.

                FueraANSEachSingleValue = $('#53dia' + id_dia).val();
                TotalFueraANS = Number(TotalFueraANS) + Number(FueraANSEachSingleValue); // Suma horizontal de los items del item Fuera de ANS (Efectividad).
            }
        }

        //console.log(TotalOp);
        //console.log(TotalFueraANS);

        EfectividadAcumulada = ((TotalOp - TotalFueraANS) / TotalOp) * 100;
        //console.log(EfectividadAcumulada);

        EAFinal = (isNaN(EfectividadAcumulada) ? 0 : EfectividadAcumulada);  // Cuando el resultado de la variable efectividad da NaN, esto lo reemplaza por 0
        //console.log(EAFinal);

        $('#8dia' + id).val(EAFinal);      


        console.log(TotalOp);
        console.log(TotalFuera");
            WriteLiteral(@"ANS);

        console.log(EAFinal);

        //------------------------------------------- Efectividad acumulada para el item 8 meses 1 2 y 3

        totalMesOp = $('#51mes' + id).val();
        totalMesFueraANS = $('#53mes' + id).val();

      

        EfectividadAcumuladaMensual = ((totalMesOp - totalMesFueraANS) / totalMesOp) * 100;
        EAMesFinal = (isNaN(EfectividadAcumuladaMensual) ? 0 : EfectividadAcumuladaMensual);

        

        $('#8mes' + id).val(EAMesFinal);
                
    }

    //validar solo numeros
    function isNumber(evt) {
        var iKeyCode = (evt.which) ? evt.which : evt.keyCode
        if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))
            return false;

        return true;
    }

</script>



<div class=""block-header"">
    <div class=""row"">
        <div class=""col-lg-5 col-md-5 col-sm-12"">
            <h2>
                Contratacion Sencilla
                <small>Acumulado </small>
            <");
            WriteLiteral(@"/h2>
        </div>
        <div class=""col-lg-7 col-md-7 col-sm-12 text-right"">
            <ul class=""breadcrumb float-md-right"">
                <li class=""breadcrumb-item""><i class=""zmdi zmdi-home""></i>Contratacion Sencilla</a></li>
                <li class=""breadcrumb-item active"">Acumulado</li>


            </ul>
        </div>
    </div>
</div>



");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45b1aac4cb2c85afc900d88929dee50670c5241f43967", async() => {
                WriteLiteral(@"

    <div class=""card"" id=""MenuTabs"">
        <!-- Nav tabs -->
        <div class=""row clearfix"">

            <div class=""col-lg-9 col-md-9 col-3"">

                <ul class=""nav nav-tabs"">
                    <li class=""nav-item""><a class=""nav-link active"" data-toggle=""tab"" id=""linkPLD"" onclick=""funAcumulados('PRESTAMO DE LIBRE DISPONIBILIDAD')"" style=""cursor:pointer"" aria-expanded=""false"">PRESTAMO DE LIBRE DISPONIBILIDAD</a></li>
                    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" id=""linkTC"" onclick=""funAcumulados('TARJETA DE CREDITO')"" style=""cursor:pointer"" aria-expanded=""false"">TARJETA DE CREDITO</a></li>


                </ul>
            </div>

            <div class=""col-lg-3 col-md-3 col-3"">

                <div class=""row"">
                    <div class=""col-4 p-r-0"">
                        <h5 class=""m-b-5"">");
#nullable restore
#line 876 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml"
                                     Write(ViewBag.YEAR);

#line default
#line hidden
#nullable disable
                WriteLiteral("</h5>\r\n                        <small>A√±o</small>\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <h5 class=\"m-b-5\">");
#nullable restore
#line 880 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml"
                                     Write(ViewBag.MES);

#line default
#line hidden
#nullable disable
                WriteLiteral("</h5>\r\n                        <small>Mes</small>\r\n                    </div>\r\n                    <div class=\"col-4 p-l-0\">\r\n                        <h5 class=\"m-b-5\">");
#nullable restore
#line 884 "C:\Workspace\CMI_CS_FUVEX\CMI_CS_FUVEX\Views\ACUMULADO\Index.cshtml"
                                     Write(ViewBag.DAY);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</h5>
                        <small>Dia</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    


    <div class=""tab-content"">

        <div id=""home"" class=""tab-pane active"">

            <div class=""row clearfix"">

                <div class=""col-md-2"">
                    <div class=""card parents-list"">
                        <div class=""header"">

");
                WriteLiteral(@"
                            <h2><strong>Resumen Acumulado</strong></h2>
                        </div>

                        <div class=""body"">
                            <div class=""table-responsive"" id=""pnlAcumuladoNro"">

                            </div>
                        </div>

                    </div>
                </div>


                <div class=""col-md-7"">

                    <div class=""card parents-list"">

                        <div class=""header"">
                            <h2><strong>Conteos diarios</strong></h2>

                        </div>
                        <div class=""body"">
                            <div class=""table-responsive"" id=""pnlAcumuladoConteos"">

                            </div>
                        </div>
                    </div>
                </div>


                <div class=""col-md-3"">
                    <div class=""card parents-list"">
                        <div class=""header"">
                    ");
                WriteLiteral(@"        <h2><strong>TOTAL</strong></h2>

                        </div>
                        <div class=""body"">
                            <div class=""table-responsive"" id=""pnlAcumuladoTotal"">

                            </div>
                        </div>


                    </div>
                </div>

            </div>

        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
